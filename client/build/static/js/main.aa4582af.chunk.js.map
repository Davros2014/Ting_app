{"version":3,"sources":["components/Login.js","components/Register.js","components/dashboard/todolist/FormTodo.js","components/dashboard/todolist/EditTodo.js","components/dashboard/todolist/ListTodos.js","components/dashboard/Navbar.js","components/dashboard/Dashboard.js","components/Landing.js","App.js","index.js"],"names":["Login","setAuth","useState","email","password","inputs","setInputs","onChange","e","trimmedValue","target","value","trim","name","onSubmitForm","a","preventDefault","body","fetch","method","headers","JSON","stringify","response","json","parseRes","jwtToken","localStorage","setItem","toast","success","error","console","message","className","to","onSubmit","type","placeholder","Register","firstname","lastname","log","FormTodo","setTodosChange","description","setDescription","handleSubmit","myHeaders","Headers","append","token","created_at","Date","disabled","length","EditTodo","str","todo","handleUpdate","todo_id","data-toggle","data-target","id","onClick","data-dismiss","slice","toUpperCase","ListTodos","allTodos","toggleComplete","todos","setTodos","deleteTodo","filter","useEffect","map","index","key","date","toLocaleDateString","year","month","day","time","toLocaleTimeString","completed","style","textDecoration","opacity","Checkbox","tabIndex","checked","htmlFor","aria-label","width","height","src","alt","Navbar","logout","Dashboard","setFirstname","setAllTodos","todosChange","completedState","getProfile","jwt_token","res","parseData","user_firstname","removeItem","position","POSITION","BOTTOM_LEFT","err","Landing","configure","App","setIsAuthenticated","checkAuthenticated","isAuthenticated","boolean","exact","path","render","props","document","getElementById"],"mappings":"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","file":"static/js/main.aa4582af.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { toast } from \"react-toastify\";\n\nconst Login = ({ setAuth }) => {\n  const [inputs, setInputs] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const { email, password } = inputs;\n\n  const onChange = e => {\n    let trimmedValue = e.target.value.trim();\n    setInputs({ ...inputs, [e.target.name]: trimmedValue });\n  };\n\n  const onSubmitForm = async e => {\n    e.preventDefault();\n\n    try {\n      const body = { email, password };\n      const response = await fetch(\n        \"http://localhost:5000/api/authentication/login\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Cross-Origin-Opener-Policy\": \"same-origin\"\n          },\n          body: JSON.stringify(body)\n        }\n      );\n\n      const parseRes = await response.json();\n      if (parseRes.jwtToken) {\n        localStorage.setItem(\"token\", parseRes.jwtToken);\n        setAuth(true);\n        toast.success(\"Logged in Successfully\");\n      } else {\n        setAuth(false);\n        toast.error(parseRes);\n      }\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return (\n    <div className=\"authWrapper\">\n      <div className=\"authContainer\">\n        <h5 className=\"subHeaderSmall\">Login</h5>\n        <p>\n          Not a member yet? Register\n          <Link className=\"link\" to=\"/register\">\n            {\" \"}\n            here\n          </Link>\n        </p>\n        <form onSubmit={onSubmitForm}>\n          <input\n            type=\"text\"\n            name=\"email\"\n            placeholder=\"email\"\n            value={email}\n            onChange={e => onChange(e)}\n            className=\"form-control my-3\"\n          />\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={e => onChange(e)}\n            className=\"form-control my-3\"\n          />\n          <button className=\"submitButton\">Submit</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nconst Register = ({ setAuth }) => {\n  const [inputs, setInputs] = useState({\n    email: \"\",\n    password: \"\",\n    firstname: \"\",\n    lastname: \"\"\n  });\n\n  const { email, password, firstname, lastname } = inputs;\n\n  const onChange = e => {\n    let trimmedValue = e.target.value.trim();\n    if (trimmedValue === \"firstname\" || trimmedValue === \"lastname\") {\n      console.log(\"first or last, who knows\");\n    }\n    setInputs({ ...inputs, [e.target.name]: trimmedValue });\n  };\n\n  const onSubmitForm = async e => {\n    e.preventDefault();\n    try {\n      const body = { email, password, firstname, lastname };\n\n      const response = await fetch(\n        \"http://localhost:5000/api/authentication/register\",\n        {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Cross-Origin-Opener-Policy\": \"same-origin\"\n          },\n          body: JSON.stringify(body)\n        }\n      );\n      const parseRes = await response.json();\n\n      if (parseRes.jwtToken) {\n        localStorage.setItem(\"token\", parseRes.jwtToken);\n        setAuth(true);\n        toast.success(\"Registered Successfully\");\n      } else {\n        setAuth(false);\n        toast.error(parseRes);\n      }\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  return (\n    <div className=\"authWrapper\">\n      <div className=\"authContainer\">\n        <h5 className=\"subHeaderSmall\">Register here</h5>\n        <p>\n          Already a member, log back in\n          <Link className=\"link\" to=\"/login\">\n            {\" \"}\n            here\n          </Link>\n        </p>\n        <form onSubmit={onSubmitForm}>\n          <input\n            type=\"text\"\n            name=\"email\"\n            value={email}\n            placeholder=\"Email\"\n            onChange={e => onChange(e)}\n            className=\"form-control my-3\"\n          />\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            placeholder=\"Password\"\n            onChange={e => onChange(e)}\n            className=\"form-control my-3\"\n          />\n          <input\n            type=\"text\"\n            name=\"firstname\"\n            value={firstname}\n            placeholder=\"First Name\"\n            onChange={e => onChange(e)}\n            className=\"form-control my-3\"\n          />\n          <input\n            type=\"text\"\n            name=\"lastname\"\n            value={lastname}\n            placeholder=\"Last Name\"\n            onChange={e => onChange(e)}\n            className=\"form-control my-3\"\n          />\n          <button className=\"submitButton\">Submit</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { useState } from \"react\";\n\nconst FormTodo = ({ setTodosChange }) => {\n  const [description, setDescription] = useState(\"\");\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (description) {\n      try {\n        const myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        myHeaders.append(\"jwt_token\", localStorage.token);\n\n        const created_at = new Date();\n        const body = { description, created_at };\n        const response = await fetch(\n          \"http://localhost:5000/api/dashboard/todos\",\n          {\n            method: \"POST\",\n            headers: myHeaders,\n            body: JSON.stringify(body)\n          }\n        );\n        const parseResponse = await response.json();\n        setTodosChange(true);\n        setDescription(\"\");\n      } catch (err) {\n        console.error(err.message);\n      }\n    }\n  };\n  return (\n    <div className=\"todoListContainer__form\">\n      <h5 className=\"subHeaderSmall\">All your tings in one place</h5>\n      <form\n        onSubmit={handleSubmit}\n        className=\"todoListContainer__todoFormField d-flex\"\n      >\n        <input\n          value={description}\n          type=\"text\"\n          placeholder=\"Add Ting here\"\n          className=\"todoForm__input form-control\"\n          onChange={e => setDescription(e.target.value)}\n        />\n        <button\n          disabled={description ? false : true}\n          className={`todoForm__btn mainButton  ${\n            !description.length ? \"disabled\" : \"\"\n          }`}\n        >\n          Add\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default FormTodo;\n","import React, { Fragment, useState } from \"react\";\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nconst EditTodo = ({ todo, setTodosChange }) => {\n  const [description, setDescription] = useState(todo.description);\n\n  const handleUpdate = async e => {\n    e.preventDefault();\n    try {\n      const myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      myHeaders.append(\"jwt_token\", localStorage.token);\n\n      const body = { description };\n      const updatedTodo = await fetch(\n        `http://localhost:5000/api/dashboard/todos/${todo.todo_id}`,\n        {\n          method: \"PUT\",\n          headers: myHeaders,\n          body: JSON.stringify(body)\n        }\n      );\n      setTodosChange(true);\n      setDescription(\"\");\n      // window.location = \"/\";\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  // useEffect(() => {\n  //   setDescription();\n  // }, [setTodosChange]);\n\n  const capitalise = str =>\n    str.slice(0, 1).toUpperCase() + str.slice(1, str.length);\n\n  return (\n    <Fragment>\n      <button\n        type=\"button\"\n        className=\"iconButton\"\n        data-toggle=\"modal\"\n        data-target={`#id${todo.todo_id}`}\n      >\n        <EditIcon />\n      </button>\n      <div\n        className=\"modal modalOutline\"\n        id={`id${todo.todo_id}`}\n        onClick={() => setDescription(todo.description)}\n      >\n        <div className=\"modal-dialog\">\n          <div className=\"modal-content\">\n            <div className=\"todoList__Item\">\n              <div className=\"modal-header\">\n                <h5 className=\"modal-title\">Edit Todo</h5>\n                <button\n                  onClick={() => setDescription(todo.description)}\n                  type=\"button\"\n                  className=\"close\"\n                  data-dismiss=\"modal\"\n                >\n                  &times;\n                </button>\n              </div>\n              <div className=\"todoList__Inner\">\n                <p>\n                  <strong>Description</strong>\n                </p>\n                <div className=\"todoList__textContainer\">\n                  <input\n                    value={capitalise(description)}\n                    type=\"text\"\n                    placeholder=\"Update ting here\"\n                    className=\"todoForm__input form-control\"\n                    onChange={e => setDescription(e.target.value)}\n                  />\n                  <button\n                    type=\"button\"\n                    data-dismiss=\"modal\"\n                    onClick={e => handleUpdate(e)}\n                    className=\"todoForm__btn mainButton\"\n                  >\n                    Update\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default EditTodo;\n","import React, { useState, useEffect } from \"react\";\nimport EditTodo from \"./EditTodo\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\n//listing todos\nconst ListTodos = ({ allTodos, setTodosChange, toggleComplete }) => {\n  const [todos, setTodos] = useState([]);\n\n  //deleting todos\n  const deleteTodo = async id => {\n    const myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    myHeaders.append(\"jwt_token\", localStorage.token);\n    try {\n      await fetch(`http://localhost:5000/api/dashboard/todos/${id}`, {\n        method: \"DELETE\",\n        headers: myHeaders\n      });\n      setTodos(\n        todos.filter(todo => {\n          return todo.todo_id !== id;\n        })\n      );\n      // window.location = \"/\";\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  // sort by most recent =\n\n  // const mostRecentTodos = todos => {\n  //   const newDate = date => new Date(date);\n  //   return todos\n  //     .slice()\n  //     .sort((a, b) => newDate(b.created_at) - newDate(a.created_at));\n  // };\n\n  useEffect(() => {\n    setTodos(allTodos);\n  }, [allTodos]);\n  const createdDate = date => {\n    let newDate = new Date(date);\n    const options = {\n      year: \"numeric\",\n      month: \"short\",\n      day: \"numeric\"\n    };\n    let creationDate = newDate.toLocaleDateString(\"en-EN\", options);\n    return creationDate;\n  };\n  const createdTime = time => {\n    let newDate = new Date(time);\n    let creationTime = newDate.toLocaleTimeString();\n    return creationTime;\n  };\n  const toggleCompletion = (id, completed) => {\n    toggleComplete(id, completed);\n  };\n  const capitalise = str =>\n    str.slice(0, 1).toUpperCase() + str.slice(1, str.length);\n  return (\n    <>\n      {allTodos && todos && todos.length > 0 ? (\n        <ul className=\"todoList\">\n          {todos.length !== 0 &&\n            todos[0].todo_id !== null &&\n            todos.map((todo, index) => (\n              <li className=\"todoList__Item\" key={todo.todo_id}>\n                <div className=\"todoList__createdContainer\">\n                  <p>\n                    <strong>Created: </strong>\n                    {createdDate(todo.created_at)}\n                  </p>{\" \"}\n                  <p>\n                    <strong>&nbsp; @ </strong>\n                    {createdTime(todo.created_at)}\n                  </p>\n                </div>\n                <div\n                  className={`todoList__Inner  ${\n                    todo.completed ? \"completed\" : \"\"\n                  }`}\n                >\n                  <div className=\"todoList__descriptionContainer\">\n                    <div className=\"todoList__textContainer\">\n                      <p>\n                        <strong>Description</strong>\n                      </p>\n                      <p\n                        style={{\n                          textDecoration: todo.completed\n                            ? \"line-through\"\n                            : \"none\",\n                          opacity: todo.completed ? \"0.5 \" : \"1\"\n                        }}\n                      >\n                        {capitalise(todo.description)}\n                      </p>\n                      <div className=\"todoList__infoContainer\">\n                        <div className=\"checkBoxContainer\">\n                          <Checkbox\n                            tabIndex={-1}\n                            checked={todo.completed}\n                            name=\"checkBox\"\n                            onClick={() =>\n                              toggleCompletion(todo.todo_id, todo.completed)\n                            }\n                          />\n                          <label className=\"checkBoxlabel\" htmlFor=\"checkBox\">\n                            <strong>Status: </strong>\n                            {`${todo.completed ? \"Completed\" : \"In progress\"}`}\n                          </label>\n                        </div>\n                        <div className=\"buttonContainer\">\n                          <EditTodo\n                            todo={todo}\n                            setTodosChange={setTodosChange}\n                          />\n\n                          <button\n                            aria-label=\"Delete\"\n                            onClick={() => deleteTodo(todo.todo_id)}\n                            className=\"iconButton ml1\"\n                          >\n                            <DeleteIcon />\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </li>\n            ))}\n        </ul>\n      ) : (\n        <img\n          className=\"noTodosImg\"\n          width=\"20vw\"\n          height=\"100%\"\n          src=\"/img/todo-list.svg\"\n          alt=\"noTodos\"\n        />\n      )}\n    </>\n  );\n};\nexport default ListTodos;\n","import React from \"react\";\n\nconst Navbar = ({ firstname, logout }) => {\n  return (\n    <nav className=\"navbar\">\n      <p>\n        Welcome to your Ting Dashboard, <strong>{firstname}</strong>\n      </p>\n      <button onClick={e => logout(e)} className=\"logOut\">\n        <i className=\"fas fa-sign-out-alt\"></i>\n      </button>\n    </nav>\n  );\n};\nexport default Navbar;\n","import React, { useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\n\nimport FormTodo from \"./todolist/FormTodo\";\nimport ListTodos from \"./todolist/ListTodos\";\nimport Navbar from \"./Navbar\";\n\n//components\n\nconst Dashboard = ({ setAuth }) => {\n  const [firstname, setFirstname] = useState(\"\");\n  const [allTodos, setAllTodos] = useState([]);\n  const [todosChange, setTodosChange] = useState(false);\n\n  const toggleComplete = async (id, completedState) => {\n    try {\n      const myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      myHeaders.append(\"jwt_token\", localStorage.token);\n      console.log(\"myHeaders\", myHeaders);\n      // setAllTodos(\n      //   allTodos.map(todo =>\n      //     todo.todo_id === id ? { ...todo, completed: !todo.completed } : todo\n      //   )\n      // );\n      const body = { completed: !completedState };\n      console.log(\"bodies...and not an animal \", body);\n      const response = await fetch(\n        `http://localhost:5000/api/dashboard/todos/completed/${id}`,\n        {\n          method: \"PUT\",\n          headers: myHeaders,\n          body: JSON.stringify(body)\n        }\n      );\n      const parseResponse = await response.json();\n      setTodosChange(true);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const getProfile = async () => {\n    try {\n      const res = await fetch(\"http://localhost:5000/api/dashboard/\", {\n        method: \"GET\",\n        headers: { jwt_token: localStorage.token }\n      });\n      const parseData = await res.json();\n      setAllTodos(parseData);\n      if (parseData[0].user_firstname)\n        setFirstname(parseData[0].user_firstname);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const logout = async e => {\n    e.preventDefault();\n    try {\n      localStorage.removeItem(\"token\");\n      setAuth(false);\n      toast.success(\"Logout successfully\", {\n        position: toast.POSITION.BOTTOM_LEFT,\n        className: \"toastify-this\"\n      });\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  useEffect(() => {\n    getProfile();\n    setTodosChange(false);\n  }, [todosChange]);\n\n  return (\n    <>\n      <Navbar firstname={firstname} logout={logout} />\n      <FormTodo setTodosChange={setTodosChange} />\n      <section className=\"todoListContainer\">\n        <div className=\"todoListContainer__list\">\n          <ListTodos\n            allTodos={allTodos}\n            setTodosChange={setTodosChange}\n            toggleComplete={toggleComplete}\n          />\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Landing = () => {\n  return (\n    <div className=\"authWrapper\">\n      <div className=\"authContainer\">\n        <div className=\"introContainer\">\n          <h2>Welcome to Ting</h2>\n          <p>Sign-in and start building your Tings!</p>\n\n          <div className=\"buttonContainer\">\n            <Link to=\"/login\" className=\"mainButton\">\n              Login\n            </Link>\n            <Link to=\"/register\" className=\"mainButton\">\n              Register\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Landing;\n","import React, { useState, useEffect } from \"react\";\nimport \"./scss/styles.scss\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n\nimport { toast } from \"react-toastify\";\n\n//components\n\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport Landing from \"./components/Landing\";\n\ntoast.configure();\n\nfunction App() {\n  async function checkAuthenticated() {\n    try {\n      const response = await fetch(\n        \"http://localhost:5000/api/authentication/verify\",\n        {\n          method: \"POST\",\n          headers: {\n            jwt_token: localStorage.token,\n            \"Cross-Origin-Opener-Policy\": \"same-origin\"\n          }\n        }\n      );\n\n      const parseRes = await response.json();\n      parseRes === true ? setIsAuthenticated(true) : setIsAuthenticated(false);\n    } catch (err) {\n      console.error(err.message);\n    }\n  }\n\n  useEffect(() => {\n    checkAuthenticated();\n  }, []);\n\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  const setAuth = boolean => {\n    setIsAuthenticated(boolean);\n  };\n\n  return (\n    <Router>\n      <div className=\"appContainer\">\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={props =>\n              !isAuthenticated ? (\n                <Landing {...props} />\n              ) : (\n                <Redirect to=\"/dashboard\" />\n              )\n            }\n          />\n\n          <Route\n            exact\n            path=\"/register\"\n            render={props =>\n              !isAuthenticated ? (\n                <Register {...props} setAuth={setAuth} />\n              ) : (\n                <Redirect to=\"/dashboard\" />\n              )\n            }\n          />\n          <Route\n            exact\n            path=\"/login\"\n            render={props =>\n              !isAuthenticated ? (\n                <Login {...props} setAuth={setAuth} />\n              ) : (\n                <Redirect to=\"/dashboard\" />\n              )\n            }\n          />\n          <Route\n            exact\n            path=\"/dashboard\"\n            render={props =>\n              isAuthenticated ? (\n                <Dashboard {...props} setAuth={setAuth} />\n              ) : (\n                <Redirect to=\"/login\" />\n              )\n            }\n          />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}